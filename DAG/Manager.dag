# Overall manager!

# single job that goes out and asks for all complete refseq reference ftp locations
# an initial pre-script runs a lot of overhead, checks for already existing maps and files
# each node within this dag has a folder that contains all of that nodes submit files, dag files, wrapper scripts, and run scripts
# as of this iteration the DAG contains two types of nodes, large planning and outlining single submit file jobs,
# and external subdags that 

# TEST CONDITIONS
# a script and appropriately structured json files can be used to adjust testing and functional limits

# A == OutlineCollection
# JOB A SetTargetAssemblies.sub
JOB A OutlineCollection/Plan.sub

# B == RunCollection
# pseudo-recursive step, attempt to grab all assemblies
# SUBDAG EXTERNAL B CollectAssemblies.dag
SUBDAG EXTERNAL B RunCollection/Run.dag

# C == OutlineComparisons
# JOB C SetTotalJobs.sub
JOB C OutlineComparisons/Run.sub

# run 50000 comparisons at a time
# the Comparisons DAG can send it's result files away 
# D == RunComparisons
# SUBDAG EXTERNAL D Comparisons.dag
SUBDAG EXTERNAL D RunComparisons/Run.dag

# nothing fancy
PARENT A CHILD B
PARENT B CHILD C
PARENT C CHILD D

# attempt collection a few times
# as of the writing the initial iteration this script (20240124) there are 4376 complete refseq reps that are returned by the initial entrez query
# implying a total of ~ 9.6M pairwise comparisons requiring at least 192 iterations of 50K
# build in extra iterations as a cushion
RETRY B 10
RETRY D 250

SCRIPT PRE A InitialPrep.sh
# this script is currently not in use
# SCRIPT PRE B CollectionStartCondition.sh
# Collection end condition might need to be checked in the subdag?
SCRIPT POST B CollectionEndCondition.sh
SCRIPT POST D ComparisonEndCondition.sh


